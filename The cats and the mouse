#include<stdio.h>
#include<iostream>
#include<string.h>
#include<queue>
using namespace std;
int n,m;
int a[120][120],b[120][120],c[120][120];
void insert(int s,int b,int a[][120])
{
queue<pair<int,int> >q;
int x,y;
pair<int,int>p1;
int visited[120][120];
memset(visited,0,sizeof(visited));
p1.first=s;
p1.second=b;
q.push(p1);
a[s][b]=0;
visited[s][b]=1;
while(!q.empty())
{
	p1=q.front();
	x=p1.first;
	y=p1.second;
	q.pop();
	if(x+1<n&&visited[x+1][y]==0)
	{
		a[x+1][y]=a[x][y]+1;
		p1.first=x+1;
		p1.second=y;
		q.push(p1);
		visited[x+1][y]=1;
	}
	if(x-1>=0&&visited[x-1][y]==0)
	{
		a[x-1][y]=a[x][y]+1;
		p1.first=x-1;
		p1.second=y;
		q.push(p1);
		visited[x-1][y]=1;
	}
	if(y-1>=0&&visited[x][y-1]==0)
	{
	    a[x][y-1]=a[x][y]+1;
		p1.first=x;
		p1.second=y-1;
		q.push(p1);
		visited[x][y-1]=1;	
	}
	if(y+1<m&&visited[x][y+1]==0)
	{
	    a[x][y+1]=a[x][y]+1;
		p1.first=x;
		p1.second=y+1;
		q.push(p1);
		visited[x][y+1]=1;	
	}
}
}
void bfs(int m1,int m2)
{
pair<int,int>p1;
int x,y,f=0;
queue<pair<int,int> >q;
int visited[120][120];
memset(visited,0,sizeof(visited));
p1.first=m1;
p1.second=m2;
q.push(p1);
while(!q.empty())
{
	p1=q.front();
	q.pop();
	x=p1.first;
	y=p1.second;
	if(x==n-1||y==m-1||x==0||y==0)
	{
		cout<<"YES\n";
		f=-1;
		break;
	}
	else
	{
	if(x+1<n&&visited[x+1][y]==0&&a[x+1][y]!=b[x+1][y]&&a[x+1][y]!=c[x+1][y])
	{
		p1.first=x+1;
		p1.second=y;
		q.push(p1);
		visited[x+1][y]=1;
	}
	else if(a[x+1][y]==b[x+1][y]&&a[x+1][y]==c[x+1][y])
	visited[x+1][y]=1;
	if(x-1<n&&visited[x-1][y]==0&&a[x-1][y]!=b[x-1][y]&&a[x-1][y]!=c[x-1][y])
	{
		p1.first=x-1;
		p1.second=y;
		q.push(p1);
		visited[x-1][y]=1;
	}
	else if(a[x-1][y]==b[x-1][y]&&a[x-1][y]==c[x-1][y])
	visited[x-1][y]=1;
	if(y-1>=0&&visited[x][y-1]==0&&a[x][y-1]!=b[x][y-1]&&a[x][y-1]!=c[x][y-1])
	{
		p1.first=x;
		p1.second=y-1;
		q.push(p1);
		visited[x][y-1]=1;
	}
	else if(a[x][y-1]==b[x][y-1]&&a[x][y-1]==c[x][y-1])
	visited[x][y-1]=1;
	if(y+1<m&&visited[x][y+1]==0&&a[x][y+1]!=b[x][y+1]&&a[x][y+1]!=c[x][y+1])
	{
		p1.first=x;
		p1.second=y+1;
		q.push(p1);
		visited[x][y+1]=1;
	}
	else if(a[x][y+1]==b[x][y+1]&&a[x][y+1]==c[x][y+1])
	visited[x][y+1]=1;
	}
}
if(f==0)
cout<<"NO\n";	
}
/*void print(int a[][120])
{
	int i,j,k;
	for(i=0;i<n;i++)
	{
		for(j=0;j<m;j++)
		cout<<a[i][j]<<" ";
		cout<<"\n";
	}
}*/
int main()
{
	int i,j,k,l,t,m1,m2,c1,c12,c21,c22;
	cin>>n>>m;
	cin>>t;
	while(t--)
	{
		cin>>m1>>m2>>c1>>c12>>c21>>c22;
		insert(m1-1,m2-1,a);
		//print(a);
	    //cout<<"\n";
		insert(c1-1,c12-1,b);
		//print(b);
		//cout<<"\n";
		insert(c21-1,c22-1,c);
		//print(c);
		//cout<<"\n";
		bfs(m1-1,m2-1);
	}
}
