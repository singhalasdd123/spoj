#include<stdio.h>
#include<iostream>
#include<algorithm>
#define max 300005
using namespace std;
struct A
{
	int a1,b1;
	int c;
}
st[max];
int T[max]={0};
int a[max]={0};
void update(int idx,int val)
{
	for(;idx<100005;idx+=idx&(-idx))
	{
	T[idx]+=val;
    }
}
int f(int idx)
{
	int sum=0;
	for(;idx>0;idx-=idx&(-idx))
	{
    sum+=T[idx];
    }
    return sum;
}
int mycmpr(const void *a,const void *b)
{
	const A * E1=(const A *)a;
	const A * E2=(const A *)b;
	return E1->a1 < E2->a1 ? -1 : (E1->a1 > E2->a1) ? 1 :  0; 
}
int mycmpr2(const void *a,const void *b)
{
	const A * E1=(const A *)a;
	const A * E2=(const A *)b;
	return E1->b1 < E2->b1 ? -1 : (E1->b1 > E2->b1) ? 1 :  0; 
}
int main()
{
	int i,j,k,l,n,v;
	int ans=0;
	cin>>n;
	for(i=0;i<n;i++)
	st[i].c=0;
	for(i=0;i<n;i++)
	{
	cin>>st[i].a1>>st[i].b1;
	st[i].c=i+1;
    }
    qsort(st,n,sizeof(A),mycmpr);
    j=0;
    for(i=0;i<n;)
    {
    	j=0;
    	v=i;
    	if(st[i].a1==st[i+1].a1)
    	{
    	while(st[i].a1==st[i+1].a1&&i<n)
    	{
    		j++;
    		i++;
    	}
    	qsort(st+v,j+1,sizeof(A),mycmpr2);
        }
        else
        i++;
    }
    for(i=0;i<n;i++)
    {
    ans=0;
    if(i>0)
    if((st[i].b1==st[i-1].b1)&&(st[i].a1==st[i-1].a1))
    {
    	a[st[i].c]=a[st[i-1].c];
    }
    else
    {
    ans=f(st[i].b1);
	a[st[i].c]=ans;
    }
  	update(st[i].b1,1);
    }
    for(i=1;i<=n;i++)
    {
    cout<<a[i]<<"\n";
    }
    return 0;
}

