#include<stdio.h>
#include<string.h>
#include<algorithm>
#include<iostream>
using namespace std;
long long int a[500000],b[500000],c[40];
long long int subset(long long int i,long long int j,long long int d[])
{
	long long int k,l,v,n;
	d[0]=c[i];
	n=1;
	for(k=i+1;k<j;k++)
	{
		v=n;
		for(l=0;l<v;l++)
		d[n++]=c[k]+d[l];
		d[n++]=c[k];
	}
	return n;
}
int main()
{
	ios_base::sync_with_stdio(0);
	long long int m,lo,hi,n1,n2,k,i,j,n;
	cin>>n>>lo>>hi;
	for(i=0;i<n;i++)
	cin>>c[i];
	j=0;
	if(n==1)
	{
		if(lo<=c[0]&&c[0]<=hi)
		j++;
	    if(0>=lo&&0<=hi)
	    j+=1;
	    cout<<j;
	}
	else
	{
	n1=subset(0,n/2,a);
	sort(a,a+n1);

    n2=subset(n/2,n,b);
	sort(b,b+n2);

	for(i=0;i<n1;i++)
	j+=(upper_bound(b,b+n2,hi-a[i])-b)-(lower_bound(b,b+n2,lo-a[i])-b);
	
	j+=upper_bound(b,b+n2,hi)-lower_bound(b,b+n2,lo);
	j+=upper_bound(a,a+n1,hi)-lower_bound(a,a+n1,lo);
	if(0>=lo&&0<=hi)
	j+=1;
	cout<<j;
    }
	return 0;
}
