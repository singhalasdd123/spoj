#include<stdio.h>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string.h>
using namespace std;
int dp[200][3210];
int main()
{
    int i,j,k,vi,ci,n,c,t,v,vol,pro,in,s;
    pair<int,int>p;
    vector<pair<int,int> >ad[100];
    vector<pair<int,int> >ad1[100];
    cin>>t;
    while(t--)
    {
    vol=0;pro=0;in=0;s=0;
    memset(dp,0,sizeof(dp));
    cin>>v>>n;
    v=v/10;
    for(i=0;i<100;i++)
    {
    ad1[i].clear();
    ad[i].clear();
    }
    for(i=0;i<n;i++)
    {
    cin>>vi>>ci>>c;
    vi=vi/10;
    if(c==0)
    {
    p.first=vi;
    p.second=ci;
    ad[i+1].push_back(p);
    }
    else
    {
    p.first=vi;
    p.second=ci;
    ad[c].push_back(p);
    }
    }
    for(i=1;i<=n;i++)
    {
    if(ad[i].size()>=1)
    {
    vol=ad[i][0].first;in=0;
    pro=ad[i][0].first*ad[i][0].second;
    for(j=1;j<ad[i].size();j++)
    {
    in=-1;
    vol+=ad[i][j].first;
    pro+=ad[i][j].first*ad[i][j].second;
    ad[i][j].second=(ad[i][0].first*ad[i][0].second)+(ad[i][j].first*ad[i][j].second);
    ad[i][j].first=ad[i][0].first+ad[i][j].first;
    }
    ad[i][0].second=ad[i][0].first*ad[i][0].second;
    if(in==-1)
    {
    p.first=vol;
    p.second=pro;
    ad[i].push_back(p);
    }
    }
    }
    k=0;
    for(i=1;i<=n;i++)
    {
    if(ad[i].size()>=1)
    {
    k++;
    for(j=0;j<ad[i].size();j++)
    {
    ad1[k].push_back(ad[i][j]);
    }
    }
    }
    n=k;
    for(i=0;i<=n+1;i++)
    for(j=0;j<=k;j++)
    if(i==0||j==0)
    dp[i][j]=0;
    for(i=1;i<=n+1;i++)
    {
    for(k=0;k<ad1[i].size();k++)
    {
    for(j=1;j<=v;j++)
    {
    if(j>=ad1[i][k].first)
    dp[i][j]=max(ad1[i][k].second+dp[i-1][j-ad1[i][k].first],max(dp[i-1][j],dp[i][j]));
    else
    dp[i][j]=max(dp[i-1][j],dp[i][j]);
    if(s<dp[i][j])
     s=dp[i][j];
    }
    }
    }
    cout<<s*10<<"\n";
    }
}

